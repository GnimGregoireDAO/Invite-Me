stages:
  - build
  - test
  - deploy
  - sync

build-job:
  stage: build
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."

unit-test-job:
  stage: test
  script:
    - echo "Running unit tests..."
    - sleep 10
    - echo "Code coverage is 90%"

lint-test-job:
  stage: test
  script:
    - echo "Linting code..."
    - sleep 5
    - echo "No lint issues found."

deploy-job:
  stage: deploy
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."

sync-repo:
  stage: sync
  script:
    - apt-get update && apt-get install -y git curl jq
    - git push --mirror git@github.com:GnimGregoireDAO/Invite-Me.git

sync-issues:
  stage: sync
  script:
    - apt-get update && apt-get install -y curl jq
    - |
      issues=$(curl -s -H "Private-Token: $GITLAB_TOKEN" "https://git.dti.crosemont.quebec/api/v4/projects/7773/issues")
      for issue in $(echo "$issues" | jq -c '.[]'); do
        title=$(echo "$issue" | jq -r '.title')
        body=$(echo "$issue" | jq -r '.description')
        curl -X POST \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          -d "{\"title\": \"$title\", \"body\": \"$body\"}" \
          "https://api.github.com/repos/GnimGregoireDAO/Invite-Me/issues"
      done
  variables:
    GITLAB_TOKEN: $GITLAB_TOKEN        # Défini dans les variables CI/CD
    GITHUB_TOKEN: $GITHUB_TOKEN        # Défini dans les variables CI/CD

sync-tags:
  stage: sync
  script:
    - git push --tags git@github.com:GnimGregoireDAO/Invite-Me.git
    - git push --all git@github.com:GnimGregoireDAO/Invite-Me.git